#!/bin/bash

ERL="`which erl 2> /dev/null`"
VERSION="$(dirname $ERL)/../lib/erlang/releases/17"

if [[ "$ERL" == "" || ! -e $VERSION ]]; then
  echo "  -- installing erlang"

  apt-get update

  # Install the build tools (dpkg-dev g++ gcc libc6-dev make)
  apt-get -y install build-essential

  # automatic configure script builder (debianutils m4 perl)
  apt-get -y install autoconf

  # Needed for HiPE (native code) support, but already installed by autoconf
  # apt-get -y install m4

  # Needed for terminal handling (libc-dev libncurses5 libtinfo-dev libtinfo5 ncurses-bin)
  apt-get -y install libncurses5-dev

  # For building with wxWidgets
  apt-get -y install libwxgtk2.8-dev libgl1-mesa-dev libglu1-mesa-dev libpng3

  # For building ssl (libssh-4 libssl-dev zlib1g-dev)
  apt-get -y install libssh-dev

  # ODBC support (libltdl3-dev odbcinst1debian2 unixodbc)
  apt-get -y install unixodbc-dev
  mkdir -p /opt/elrang-build

  if [[ ! -e /opt/elrang-build/otp_src_17.0.tar.gz ]]; then
    (cd /opt/elrang-build && wget http://www.erlang.org/download/otp_src_17.0.tar.gz)
  fi

  (cd /opt/elrang-build && \
    tar -xvzf otp_src_17.0.tar.gz && \
    chmod -R 777 otp_src_17.0 && \
    cd otp_src_17.0 && \
    ./configure && \
    make && \
    make install)
fi

if [[ ! -e /opt/elixir-build/@ELIXIR_VERSION@ ]]; then

  GIT_APPS_DIR=/opt/elixir-build/@ELIXIR_VERSION@ \
    GIT_REPO_NAME=elixir \
    GIT_URL=https://github.com/elixir-lang/elixir.git \
    GIT_BRANCH=@ELIXIR_VERSION@ \
    /var/capbash/submodules/git/install

  (cd /opt/elixir-build/@ELIXIR_VERSION@/elixir && make install)

fi

